$date
	Fri Sep 25 11:42:29 2015
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testMultiplexer $end
$var wire 1 ! out $end
$var reg 1 " address0 $end
$var reg 1 # address1 $end
$var reg 1 $ in0 $end
$var reg 1 % in1 $end
$var reg 1 & in2 $end
$var reg 1 ' in3 $end
$scope module multiplexer $end
$var wire 1 ( I0andnA0andnA1 $end
$var wire 1 ) I1andA0andnA1 $end
$var wire 1 * I2andnA0andA1 $end
$var wire 1 + I3andA0andA1 $end
$var wire 1 , address0 $end
$var wire 1 - address1 $end
$var wire 1 . in0 $end
$var wire 1 / in1 $end
$var wire 1 0 in2 $end
$var wire 1 1 in3 $end
$var wire 1 2 nA0 $end
$var wire 1 3 nA1 $end
$var wire 1 ! out $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
z3
z2
x1
x0
x/
0.
0-
0,
z+
z*
z)
z(
x'
x&
x%
0$
0#
0"
z!
$end
#50
0+
0*
0)
0(
12
13
#100
0!
#1000
1$
1.
#1050
1(
#1100
1!
#2000
x$
x.
0%
0/
1"
1,
#2050
x(
02
#2100
x!
0(
#2150
0!
#3000
1%
1/
#3050
1)
#3100
1!
#4000
x%
x/
0&
00
0"
0,
1#
1-
#4050
12
0)
03
#4100
0!
#5000
1&
10
#5050
1*
#5100
1!
#6000
x&
x0
0'
01
1"
1,
#6050
x*
02
#6100
x!
0*
#6150
0!
#7000
1'
11
#7050
1+
#7100
1!
#8000
